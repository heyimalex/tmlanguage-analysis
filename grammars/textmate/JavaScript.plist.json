{
  "comment": "JavaScript Syntax: version 2.0",
  "fileTypes": [
    "js",
    "_js",
    "es",
    "es6",
    "gs",
    "htc",
    "pac",
    "jsm",
    "jslib",
    "jspre",
    "xsjs",
    "xsjslib",
    "jscad",
    "json5",
    "jsx"
  ],
  "firstLineMatch": "^#!.*\\b(node|iojs|JavaScript)",
  "keyEquivalent": "^~J",
  "name": "JavaScript",
  "patterns": [
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.js"
        }
      },
      "comment": "Match the shebang for JavaScript executables",
      "match": "\\A(#!).*$\\n",
      "name": "comment.line.number-sign.shebang.js"
    },
    {
      "begin": "(?<!\\.)\\b(import)(?!\\s*:)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.import.js"
        }
      },
      "end": "(;)|\\n",
      "endCaptures": {
        "1": {
          "name": "punctuation.terminator.statement.js"
        }
      },
      "name": "meta.import.js",
      "patterns": [
        {
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.modules.begin.js"
            }
          },
          "comment": "{ member1 , member2 as alias2 , [...] }",
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.modules.end.js"
            }
          },
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "variable.language.default.js"
                },
                "2": {
                  "name": "variable.other.module.js"
                },
                "3": {
                  "name": "keyword.control.js"
                },
                "4": {
                  "name": "invalid.illegal.js"
                },
                "5": {
                  "name": "variable.other.module-alias.js"
                }
              },
              "comment": "(default|name) as alias",
              "match": "(?x)\n                              (?: \\b(default)\\b | \\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b)\n                              \\s*\n                              (\\b as \\b)\n                              \\s*\n                              (?: (\\b default \\b | \\*) | \\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b)"
            },
            {
              "match": ",",
              "name": "punctuation.separator.object.js"
            },
            {
              "include": "#comments"
            },
            {
              "match": "\\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b",
              "name": "variable.other.module.js"
            }
          ]
        },
        {
          "captures": {
            "1": {
              "name": "variable.language.default.js"
            },
            "2": {
              "name": "variable.language.import-all.js"
            },
            "3": {
              "name": "variable.other.module.js"
            },
            "4": {
              "name": "keyword.control.js"
            },
            "5": {
              "name": "invalid.illegal.js"
            },
            "6": {
              "name": "variable.other.module-alias.js"
            }
          },
          "comment": "(default|*|name) as alias",
          "match": "(?x)\n                        (?: \\b(default)\\b | (\\*) | \\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b)\n                        \\s*\n                        (\\b as \\b)\n                        \\s*\n                        (?: (\\b default \\b | \\*) | \\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b)\n                    "
        },
        {
          "match": "\\*",
          "name": "variable.language.import-all.js"
        },
        {
          "match": "\\b(default)\\b",
          "name": "variable.language.default.js"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#comments"
        },
        {
          "match": "\\b(from)\\b",
          "name": "keyword.control.js"
        },
        {
          "match": "\\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b(?=.*\\bfrom\\b)",
          "name": "variable.other.module.js"
        },
        {
          "match": ",",
          "name": "punctuation.separator.object.js"
        }
      ]
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.js"
        },
        "2": {
          "name": "variable.language.default.js"
        },
        "3": {
          "name": "variable.other.module.js"
        }
      },
      "comment": "ES6 export: `export default (variable|class|function, etc.)`",
      "match": "(?x) \\b(export)\\b \\s* \\b(default)\\b (?:\\s*) \\b((?!\\bfunction\\b|\\bclass\\b|\\blet\\b|\\bvar\\b|\\bconst\\b)[\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)?\\b",
      "name": "meta.export.js"
    },
    {
      "begin": "(?<!\\.)\\b(export)(?!\\s*:)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.export.js"
        }
      },
      "comment": "ES6 export, re-export: `export {member as alias, [...]} [from ...]`",
      "end": "(?=;|\\bfunction\\b|\\bclass\\b|\\blet\\b|\\bvar\\b|\\bconst\\b|$)",
      "name": "meta.export.js",
      "patterns": [
        {
          "include": "#numbers"
        },
        {
          "begin": "\\{(?=.*\\bfrom\\b)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.modules.begin.js"
            }
          },
          "comment": "`{ member1 , member2 as alias2 , [...] }` inside re-export",
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.modules.end.js"
            }
          },
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "variable.language.default.js"
                },
                "2": {
                  "name": "variable.other.module.js"
                },
                "3": {
                  "name": "keyword.control.js"
                },
                "4": {
                  "name": "variable.language.default.js"
                },
                "5": {
                  "name": "invalid.illegal.js"
                },
                "6": {
                  "name": "variable.other.module-alias.js"
                }
              },
              "comment": "(default|name) as alias",
              "match": "(?x)\n                                (?: \\b(default)\\b | \\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b)\n                                \\s*\n                                (\\b as \\b)\n                                \\s*\n                                (?: \\b(default)\\b | (\\*) | \\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b)\n                            "
            },
            {
              "match": ",",
              "name": "meta.delimiter.object.comma.js"
            },
            {
              "match": "\\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b",
              "name": "variable.other.module.js"
            }
          ]
        },
        {
          "begin": "(?![\\p{L}\\p{Nl}$_])\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.modules.begin.js"
            }
          },
          "comment": "{ member1 , member2 as alias2 , [...] }",
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.modules.end.js"
            }
          },
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "invalid.illegal.js"
                },
                "2": {
                  "name": "variable.other.module.js"
                },
                "3": {
                  "name": "keyword.control.js"
                },
                "4": {
                  "name": "variable.language.default.js"
                },
                "5": {
                  "name": "invalid.illegal.js"
                },
                "6": {
                  "name": "variable.other.module-alias.js"
                }
              },
              "comment": "name as (default|alias)",
              "match": "(?x)\n                                (?: \\b(default)\\b | \\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b)\n                                \\s*\n                                (\\b as \\b)\n                                \\s*\n                                (?: \\b(default)\\b | (\\*) | \\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b)\n                            "
            },
            {
              "match": ",",
              "name": "meta.delimiter.object.comma.js"
            },
            {
              "match": "\\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b",
              "name": "variable.other.module.js"
            }
          ]
        },
        {
          "match": "\\*(?=.*\\bfrom\\b)",
          "name": "variable.language.import-all.js"
        },
        {
          "match": "\\b(default)\\b",
          "name": "variable.language.default.js"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#comments"
        },
        {
          "match": "\\b(from)\\b",
          "name": "keyword.control.js"
        },
        {
          "match": "\\b([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b",
          "name": "variable.other.module.js"
        },
        {
          "match": ",",
          "name": "meta.delimiter.object.comma.js"
        },
        {
          "include": "#operators"
        }
      ]
    },
    {
      "begin": "(?x)\n\t\t\t(?:\n\t\t\t\t(?<!\\w)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Ensure word boundry\n\t\t\t\t([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\t# Identifier\n\t\t\t\t\\s*(=)\\s*\n\t\t\t)?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Optional\n\t\t\t\\b(function)\n\t\t\t(?:\\s*\n\t\t\t\t(\\*)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Optional generator notation\n\t\t\t)?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# (ECMAScript 6)\n\t\t\t(?:\\s*\n\t\t\t\t(?<=[\\s\\*])\n\t\t\t\t([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\t# Optional Name\n\t\t\t)?\n\t\t\t\\s*(\\()\n\t\t\t",
      "beginCaptures": {
        "1": {
          "name": "meta.function.variable.js"
        },
        "2": {
          "name": "keyword.operator.assignment.js"
        },
        "3": {
          "name": "storage.type.function.js"
        },
        "4": {
          "name": "storage.modifier.js"
        },
        "5": {
          "name": "entity.name.function.js"
        },
        "6": {
          "name": "punctuation.definition.parameters.begin.js"
        }
      },
      "comment": "Match function, optional function name and optional function arguments",
      "end": "(\\))",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.parameters.end.js"
        }
      },
      "name": "meta.function.js",
      "patterns": [
        {
          "include": "#function-params"
        }
      ]
    },
    {
      "begin": "(?x)\n                \\b\n                (?: (static) \\s+ )?                                             # Optional static keyword\n                (?!                                                             # Dont match known keywords\n                    (?:break|case|catch|continue|do|else|finally|for|function|if|\n                        export|import|package|return|switch|throw|try|while|with)\n                    [\\s\\(]\n                )\n                ([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\n                \\s*\n                (\\()\n                (?=(?:[^\\(\\)]*)?\\)\\s*\\{)\n            ",
      "beginCaptures": {
        "1": {
          "name": "storage.modifier.static.js"
        },
        "2": {
          "name": "entity.name.function.js"
        },
        "3": {
          "name": "punctuation.definition.parameters.begin.js"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.begin.js"
        }
      },
      "name": "meta.method.js",
      "patterns": [
        {
          "include": "#function-params"
        }
      ]
    },
    {
      "captures": {
        "1": {
          "name": "storage.type.class.js"
        },
        "2": {
          "name": "entity.name.type.class.js"
        },
        "3": {
          "name": "storage.modifier.js"
        },
        "4": {
          "name": "entity.other.inherited-class.js"
        }
      },
      "match": "(?x)\n                \\b(class)\n                (?:\n                    \\s+\n                    ([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\n                )?\n                (?:\n                    \\s+\n                    (extends)\n                    \\s+\n                    ([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\n                )?\n                \\s*($|(?=\\{))\n            ",
      "name": "meta.class.js"
    },
    {
      "begin": "(?<=[\\[=(?:+,!]|^|return|=>|&&|\\|\\|)\\s*(?=/[^/*+?].*/)",
      "comment": "Dont scope preceding whitespace as string.regex",
      "end": "(?<=[/igmuy])",
      "patterns": [
        {
          "begin": "/",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.js"
            }
          },
          "end": "(/)[igmuy]*",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.js"
            }
          },
          "name": "string.regexp.js",
          "patterns": [
            {
              "include": "source.js.regexp"
            }
          ]
        }
      ]
    },
    {
      "begin": "\\?",
      "beginCaptures": {
        "0": {
          "name": "keyword.operator.ternary.js"
        }
      },
      "comment": "Matching as a capture group prevents false positives with other uses of :",
      "end": "([^:\"'`\\[\\]{}()]*)(:)",
      "endCaptures": {
        "1": {
          "patterns": [
            {
              "include": "$self"
            }
          ]
        },
        "2": {
          "name": "keyword.operator.ternary.js"
        }
      },
      "name": "meta.ternary-if.js",
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    {
      "match": "(?<!\\w)[\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*(?=\\s*:\\s*function\\b)",
      "name": "entity.name.function.js"
    },
    {
      "match": "(?<!\\w)[\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*(?=\\s*:)",
      "name": "entity.name.type.attribute-name.js"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#operators"
    },
    {
      "match": "=>",
      "name": "storage.type.arrow.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(let|var)\\b(?!\\$)",
      "name": "storage.type.var.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(get|set|const)\\b(?!\\$)",
      "name": "storage.modifier.js"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.js"
        },
        "2": {
          "name": "storage.modifier.js"
        }
      },
      "match": "(?<!\\.)\\b(yield)(?!\\s*:)\\b(?:\\s*(\\*))?",
      "name": "meta.control.yield.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(break|case|catch|continue|default|do|else|export|finally|for|if|return|switch|throw|try|while|with)\\b(?!\\$)",
      "name": "keyword.control.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(delete|in|instanceof|new|of|typeof|void)\\b(?!\\$)",
      "name": "keyword.operator.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(debugger)\\b(?!\\$)",
      "name": "keyword.other.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(Array|Boolean|Date|Error|EvalError|Function|Number|Object|RangeError|ReferenceError|RegExp|String|SyntaxError|TypeError|URIError)\\b(?!\\$)",
      "name": "support.class.js"
    },
    {
      "comment": "DOM Core Level 4 (http://www.w3.org/TR/domcore/) and DOM Events Level 3 (http://www.w3.org/TR/DOM-Level-3-Events/)",
      "match": "(?<!\\.|\\$)\\b(Attr|CharacterData|Comment|CompositionEvent|CustomEvent|Document|DocumentFragment|DocumentType|DOMError|DOMException|DOMImplementation|DOMParser|DOMString|DOMTimestamp|DOMSettableTokenList|DOMStringList|DOMTokenList|Element|Event|EventTarget|FocusEvent|HTMLCollection|KeyboardEvent|MouseEvent|MutationObserver|MutationRecord|Node|NodeFilter|NodeIterator|NodeList|ProcessingInstruction|Range|Text|TextEvent|TreeWalker|UIEvent|WheelEvent|XMLDocument)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "DOM Core Level 4 (http://www.w3.org/TR/domcore/) and DOM Events Level 3 (http://www.w3.org/TR/DOM-Level-3-Events/)",
      "match": "(?<!\\.|\\$)\\b(CDATASection|DOMConfiguration|DOMErrorHandler|DOMImplementationList|DOMImplementationSource|DOMLocator|DOMObject|DOMUserData|Entity|EntityReference|MutationEvent|NamedNodeMap|NameList|Notation|TypeInfo|UserDataHandler)\\b(?!\\$)",
      "name": "invalid.deprecated.dom.js"
    },
    {
      "comment": "TypedArray specification used by HTML 5 (http://www.khronos.org/registry/typedarray/specs/latest/)",
      "match": "(?<!\\.|\\$)\\b(ArrayBuffer|DataView|Float32Array|Float64Array|Int8Array|Int16Array|Int32Array|TypedArray|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "File specification used by HTML 5 (http://dev.w3.org/2006/webapi/FileAPI/)",
      "match": "(?<!\\.|\\$)\\b(Blob|File|FileList|FileReader)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "XMLHttpRequest specification used by HTML 5 (http://xhr.spec.whatwg.org/)",
      "match": "(?<!\\.|\\$)\\b(FormData|ProgressEvent|XMLHttpRequest|XMLHttpRequestUpload)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "EventSource specification used by HTML 5 (http://www.w3.org/TR/eventsource/)",
      "match": "(?<!\\.|\\$)\\b(EventSource)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "CSSOM specification used by HTML 5 (http://dev.w3.org/csswg/cssom/)",
      "match": "(?<!\\.|\\$)\\b(CSS|CSSCharsetRule|CSSImportRule|CSSPageRule|CSSRule|CSSRuleList|CSSStyleDeclaration|CSSStyleRule|CSSStyleSheet|MediaList|Stylesheet|StyleSheetList)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "CSSOM View specification used by HTML 5 (http://dev.w3.org/csswg/cssom-view/)",
      "match": "(?<!\\.|\\$)\\b(Screen)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "CSS Font specification used by HTML 5 (http://dev.w3.org/csswg/css-fonts/)",
      "match": "(?<!\\.|\\$)\\b(CSSFontFaceRule)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "SVG specification used by HTML 5 (http://www.w3.org/TR/SVG/single-page.html)",
      "match": "(?<!\\.|\\$)\\b(SVGAElement|SVGAltGlyphDefElement|SVGAltGlyphElement|SVGAltGlyphItemElement|SVGAngle|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedPreserveAspectRatio|SVGAnimatedRect|SVGAnimatedString|SVGAnimatedTransformList|SVGAnimationElement|SVGCircleElement|SVGClipPathElement|SVGColor|SVGComponentTransferFunctionElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGDocument|SVGElement|SVGElementInstance|SVGElementInstanceList|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEFloodElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGImageElement|SVGLength|SVGLengthList|SVGLineElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMatrix|SVGMetadataElement|SVGMissingGlyphElement|SVGNumber|SVGNumberList|SVGPaint|SVGPathElement|SVGPathSeg|SVGPathSegArcAbs|SVGPathSegArcRel|SVGPathSegClosePath|SVGPathSegCurvetoCubicAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegLinetoAbs|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoVerticalRel|SVGPathSegList|SVGPathSegMovetoAbs|SVGPathSegMovetoRel|SVGPatternElement|SVGPoint|SVGPointList|SVGPolygonElement|SVGPolylineElement|SVGPreserveAspectRatio|SVGRadialGradientElement|SVGRect|SVGRectElement|SVGRenderingIntent|SVGSVGElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStringList|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTRefElement|SVGTSpanElement|SVGTextContentElement|SVGTextElement|SVGTextPathElement|SVGTextPositioningElement|SVGTitleElement|SVGTransform|SVGTransformList|SVGUnitTypes|SVGUseElement|SVGUseElement|SVGVKernElement|SVGViewElement|SVGViewSpec|SVGZoomEvent)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "WebGL specification used by HTML 5 (http://www.khronos.org/registry/webgl/specs/latest/1.0/)",
      "match": "(?<!\\.|\\$)\\b(WebGLActiveInfo|WebGLBuffer|WebGLContextEvent|WebGLFramebuffer|WebGLProgram|WebGLRenderbuffer|WebGLRenderingContext|WebGLShader|WebGLShaderPrecisionFormat|WebGLTexture|WebGLUniformLocation)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "HTML 5 (http://www.w3.org/TR/html5/single-page.html)",
      "match": "(?<!\\.|\\$)\\b(Audio|BarProp|DOMStringMap|ErrorEvent|FileError|HTMLAllCollection|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLAudioElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLDListElement|HTMLDataElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormControlsCollection|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMediaElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOptionsCollection|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLSour|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTimeElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLVideoElement|HashChangeEvent|History|Image|Location|MediaController|MediaError|MouseEvent|Navigator|Option|PageTransitionEvent|PopStateEvent|TextTrack|TextTrackCue|TextTrackCueList|TextTrackList|TimeRanges|TrackEvent|UIEvent|ValidityState|Window)\\b(?!\\$)",
      "name": "support.class.dom.js"
    },
    {
      "comment": "HTML 5 (http://www.w3.org/TR/html5/single-page.html#window)",
      "match": "(?<!\\.|\\$)\\b(applicationCache|closed|console|crypto|document|external|frameElement|frames|history|innerHeight|innerWidth|length|location|locationbar|menubar|name|navigator|offscreenBuffering|onabort|onafterprint|onbeforeprint|onbeforeunload|onblur|oncancel|oncanplay|oncanplaythrough|onchange|onclick|onclose|oncuechange|ondblclick|ondrag|ondragend|ondragenter|ondragexit|ondragleave|ondragover|ondragstart|ondrop|ondurationchange|onemptied|onended|onerror|onfocus|onhashchange|oninput|oninvalid|onkeydown|onkeypress|onkeyup|onload|onloadeddata|onloadedmetadata|onloadstart|onmessage|onmousedown|onmouseenter|onmouseleave|onmousemove|onmouseout|onmouseover|onmouseup|onmousewheel|onoffline|ononline|onpagehide|onpageshow|onpause|onplay|onplaying|onpopstate|onprogress|onratechange|onreset|onresize|onscroll|onseeked|onseeking|onselect|onshow|onstalled|onstorage|onsubmit|onsuspend|ontimeupdate|onunload|onvolumechange|onwaiting|opener|outerHeight|outerWidth|pageXOffset|pageYOffset|parent|personalbar|postMessage|screen|screenX|screenY|scrollbars|scrollX|scrollY|self|status|statusbar|toolbar|top|window)\\b(?!\\$)",
      "name": "support.constant.dom.js"
    },
    {
      "comment": "HTML 5 (http://www.w3.org/TR/html5/single-page.html#window)",
      "match": "(?<!\\.|\\$)\\b(addEventListener|alert|atob|blur|btoa|clearInterval|clearTimeout|close|confirm|dispatchEvent|doNotTrack|find|focus|getComputedStyle|getMatchedCSSRules|getSelection|matchMedia|moveBy|moveTo|open|openDatabase|print|prompt|removeEventListener|resizeBy|resizeTo|scroll|scrollBy|scrollTo|setInterval|setTimeout|showModalDialog|stop)\\b(?!\\$)",
      "name": "support.function.dom.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(captureEvents|defaultStatus|defaultstatus|releaseEvents)\\b(?!\\$)",
      "name": "invalid.deprecated.dom.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(JSON|Math)\\b(?!\\$)",
      "name": "support.constant.js"
    },
    {
      "match": "(?<!\\.|\\$)\\b(decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|uneval)\\b(?!\\$)",
      "name": "support.function.js"
    },
    {
      "comment": "Keywords reserved for future use but now are unused.",
      "match": "(?<!\\.|\\$)\\b(enum|await)\\b(?!\\$)",
      "name": "invalid.illegal.js"
    },
    {
      "comment": "Keywords reserved for future use in strict mode but now are unused.",
      "match": "(?<!\\.|\\$)\\b(implements|interface|package|private|protected|public)\\b(?!\\$)",
      "name": "invalid.deprecated.js"
    },
    {
      "comment": "Keywords used in an invalid context",
      "match": "(?<!\\.|\\$)\\b(class|function|static|extends)\\b(?!\\$)",
      "name": "invalid.illegal.js"
    },
    {
      "match": "\\b(false|Infinity|NaN|null|true|undefined)\\b",
      "name": "constant.language.js"
    },
    {
      "match": "(?<!\\.)\\b(super|this)(?!\\s*:)\\b",
      "name": "variable.language.js"
    },
    {
      "match": "\\;",
      "name": "punctuation.terminator.statement.js"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.section.scope.begin.js"
        },
        "2": {
          "name": "punctuation.section.scope.end.js"
        }
      },
      "comment": "Allows the special return snippet to fire.",
      "match": "(\\[)(\\])"
    },
    {
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.scope.begin.js"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.scope.end.js"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.scope.begin.js"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.scope.end.js"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    {
      "match": "\\[|\\]",
      "name": "meta.brace.square.js"
    },
    {
      "comment": "Match classes based on the usage of the \"new\" operator.",
      "match": "(?<=new )([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)(?!\\w)",
      "name": "support.class.js"
    },
    {
      "comment": "Match classes based on the usage of the \"instanceof\" operator.",
      "match": "(?<= instanceof )([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)(?!\\w)",
      "name": "support.class.js"
    },
    {
      "comment": "Match classes based on the usage of the \"prototype\" property.",
      "match": "(?<!\\w)([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)(?=\\.prototype\\b)",
      "name": "support.class.js"
    },
    {
      "comment": "Matches the \"prototype\" keyword.  Even though it is not a valid keyword, it is a special constant of sorts.",
      "match": "(?<=\\.)(prototype)\\b",
      "name": "keyword.other.js"
    },
    {
      "comment": "Matches the function calls.",
      "match": "(?<!\\w)([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)(?=\\()",
      "name": "meta.function-call.js"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "begin": "/\\*\\*(?!/|\\*)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.begin.js"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.end.js"
            }
          },
          "name": "comment.block.documentation.js",
          "patterns": [
            {
              "match": "(?<!\\w)@(abstract|access|alias|arg|argument|async|attribute|augments|author|beta|borrows|bubbes|callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright|default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exports?|extends|extension|extension_for|extensionfor|external|file|fileoverview|final|fires|for|function|global|host|ignore|implements|inherit[Dd]oc|inner|instance|interface|kind|lends|license|listens|main|member|memberof|method|mixex|mixins?|module|name|namespace|nocollapse|nosideeffects|override|overview|package|param|preserve|private|prop|property|protected|public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation|version|virtual|writeOnce)\\b",
              "name": "keyword.other.documentation.js.jsdoc"
            }
          ]
        },
        {
          "begin": "/\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.begin.js"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.end.js"
            }
          },
          "name": "comment.block.js"
        },
        {
          "begin": "(^[ \\t]+)?(?=//)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.js"
            }
          },
          "end": "(?!\\G)",
          "patterns": [
            {
              "begin": "//",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.js"
                }
              },
              "end": "\\n",
              "name": "comment.line.double-slash.js"
            }
          ]
        }
      ]
    },
    "function-params": {
      "patterns": [
        {
          "begin": "(?=[\\p{L}\\p{Nl}$_])",
          "comment": "Matches valid argument, function and variable names.  To be thorough: https://github.com/mathiasbynens/mothereff.in/tree/master/js-variables",
          "end": "(?=[,)/])",
          "patterns": [
            {
              "match": "\\G[\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*",
              "name": "variable.parameter.function.js"
            }
          ]
        },
        {
          "include": "#comments"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "(?<!\\w|\\$)0[xX]\\h+\\b",
          "name": "constant.numeric.hex.js"
        },
        {
          "match": "(?<!\\w|\\$)0[bB][01]+\\b",
          "name": "constant.numeric.binary.js"
        },
        {
          "match": "(?<!\\w|\\$)0[oO][0-7]+\\b",
          "name": "constant.numeric.octal.js"
        },
        {
          "match": "(?x)\n        \t\t\t\t(?<!\\w|\\$)\t\t\t\t\t\t\t    # Ensure word boundry\n                        [+-]?                                   # Optional sign\n        \t\t\t\t(?>\n        \t\t\t\t\t(\n        \t\t\t\t\t\t(0|[1-9][0-9]*)(\\.[0-9]*)?\t\t# 0 or 1 or 1. or 1.0\n        \t\t\t\t\t  | \\.[0-9]+\t\t\t\t\t\t# .1\n        \t\t\t\t\t)\n        \t\t\t\t\t([eE][+-]?[0-9]+)?\t\t\t\t\t# Exponent\n        \t\t\t\t)\n        \t\t\t\t(?!\\w)\t\t\t\t\t\t\t\t\t# Ensure word boundry\n        \t\t\t",
          "name": "constant.numeric.js"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "%=|\\+=|\\-=|\\*=|(?<!\\()/=",
          "name": "keyword.operator.assignment.compound.js"
        },
        {
          "match": "&=|\\^=|<<=|>>=|>>>=|\\|=",
          "name": "keyword.operator.assignment.compound.bitwise.js"
        },
        {
          "match": "!==|!=|<=|>=|===|==|<|>",
          "name": "keyword.operator.comparison.js"
        },
        {
          "match": "&&|!|\\|\\|",
          "name": "keyword.operator.logical.js"
        },
        {
          "match": "&|\\||\\^|~",
          "name": "keyword.operator.bitwise.js"
        },
        {
          "match": "\\:",
          "name": "keyword.operator.js"
        },
        {
          "match": "!",
          "name": "keyword.operator.logical.js"
        },
        {
          "match": "=|\\:",
          "name": "keyword.operator.assignment.js"
        },
        {
          "match": "\\-\\-",
          "name": "keyword.operator.decrement.js"
        },
        {
          "match": "\\+\\+",
          "name": "keyword.operator.increment.js"
        },
        {
          "match": "%|\\*|/|\\-|\\+",
          "name": "keyword.operator.arithmetic.js"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.js"
            }
          },
          "end": "'",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.js"
            }
          },
          "name": "string.quoted.single.js",
          "patterns": [
            {
              "include": "#escapes"
            },
            {
              "match": "\\\\\\n",
              "name": "constant.character.escape.newline.js"
            },
            {
              "match": "\\n",
              "name": "invalid.illegal.character-not-allowed-here.js"
            }
          ]
        },
        {
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.js"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.js"
            }
          },
          "name": "string.quoted.double.js",
          "patterns": [
            {
              "include": "#escapes"
            },
            {
              "match": "\\\\\\n",
              "name": "constant.character.escape.newline.js"
            },
            {
              "match": "\\n",
              "name": "invalid.illegal.character-not-allowed-here.js"
            }
          ]
        },
        {
          "begin": "`",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.js"
            }
          },
          "end": "`",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.js"
            }
          },
          "name": "string.quoted.other.template.js",
          "patterns": [
            {
              "include": "#escapes"
            },
            {
              "include": "#interpolation"
            }
          ]
        }
      ],
      "repository": {
        "escapes": {
          "match": "\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)",
          "name": "constant.character.escape.js"
        },
        "interpolation": {
          "begin": "\\$\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.embedded.begin.js"
            }
          },
          "contentName": "source.js",
          "end": "(\\})",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.embedded.end.js"
            },
            "1": {
              "name": "source.js"
            }
          },
          "name": "meta.embedded.line.js",
          "patterns": [
            {
              "begin": "\\{",
              "beginCaptures": {
                "0": {
                  "name": "meta.brace.curly.js"
                }
              },
              "end": "\\}",
              "endCaptures": {
                "0": {
                  "name": "meta.brace.curly.js"
                }
              },
              "patterns": [
                {
                  "include": "$self"
                }
              ]
            },
            {
              "include": "$self"
            }
          ]
        }
      }
    }
  },
  "scopeName": "source.js",
  "uuid": "93E017CC-6F27-11D9-90EB-000D93589AF6"
}